:root {
  --primary-color: #ef9523;
  --secondary-color: #6f6967;
}

/* Faz com que os cards apareçam de forma animada na tela */
@keyframes cards-container {
  from {
    opacity: 0;
    transform: translateY(-20px); /* Translada o elemento 20px para baixo */
  }
  to {
    opacity: 1; 
    transform: translateY(0); /* Retorna o elemento à sua posição original */
  }
}

/* Função que faz a logo ter o comportamento de rotação */
@keyframes spin {
  0% { transform: rotate(0deg); }  /* Rotação inicial de 0 graus */
  100% { transform: rotate(360deg); } /* Rotação final de 360 graus, completando um círculo */
}

body {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: #c5bbb6;
}

/* Define a altura do elemento <html> para ocupar 100% da altura da área visível da janela do navegador, chamada de viewport */
html, body {
  height: 100%;
  margin: 0; /* Remove as margens padrão */
}

nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 14px 22px;
  background-color: var(--secondary-color);
  z-index: 3;  /* Define a ordem de empilhamento do contêiner em relação a outros elementos */
}

.nav ul {
  list-style-type: none; /* Remove os bullets (são os . que aparecem ao criar listas) padrão */
  padding: 0;
  margin: 0;
  display: flex;
  gap: 20px;
  color: white;
}

.nav ul a {
  text-decoration: none; /* Remove o sublinhado padrão dos links para um visual mais limpo */
  color: inherit; /* Faz com que a cor dos links herde a cor do elemento pai, garantindo consistência com o design do menu */
}

.nav ul li:hover {
  color: var(--primary-color);
  cursor: pointer;
  transform: scale(1.1);
  transition: transform 0.3s;
}

/* Estiliza a logo para exibição e animação */
.logo {
  height: 24px; /* Define a altura da logo para 24 pixels, mantendo o tamanho consistente no layout */
  cursor: pointer;
  animation: spin 2s linear infinite;/*"spin" faz a logo girar continuamente,linear` garante uma rotação suave e contínua sem alterações na velocidade, `infinite` faz com que a animação se repita indefinidamente. */
}

/* Estilo para a área de conteúdo */
.content-wrapper {
  flex-grow: 1; /* Faz o elemento se expandir para preencher o espaço disponível dentro de um container flexível */
  background-image: url('../img/bg_image.jpg');
  background-size: cover; /* Faz com que a imagem de fundo cubra todo o espaço do elemento */
  background-position: center;
  background-repeat: no-repeat;
  position: relative;
  padding-bottom: 40px;
}

.content-wrapper::before {
  content: ''; /* Cria um pseudo-elemento vazio */
  position: absolute;
  top: 0; /* Alinha o pseudo-elemento ao topo do .content-wrapper */
  left: 0; /* Alinha o pseudo-elemento à esquerda do .content-wrapper */
  width: 100%;
  height: 100%; /* Faz com que o pseudo-elemento cubra toda a altura do .content-wrapper */
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1;  /* Define a ordem de empilhamento do contêiner em relação a outros elementos */
}

.boas_vindas {
  z-index: 2;
  position: relative;
  text-align: center;
}

.boas_vindas h1 {
  color: rgba(255, 255, 255, 0.884);
  font-size: 4vw;
  font-weight: bold;
  margin-bottom: 10px;
}

.boas_vindas p {
  line-height: 1.5; /* Melhor espaçamento entre linhas */
  font-size: 1.5vw; /* Texto se ajusta conforme a largura da viewport */
  margin: 0 10% 2vw; /* Adiciona espaço inferior responsivo */
  color: rgba(255, 255, 255, 0.705);
}

/* Cards abaixo do texto de boas-vindas */
.cards-container {
  z-index: 2; /* Define a ordem de empilhamento do contêiner em relação a outros elementos */
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
  flex-wrap: wrap; /* Permite que os itens filhos se movam para a linha seguinte, se necessário */
  padding: 20px;
  gap: 20px;
  margin-top: 2.1vw; /* Margem superior responsiva */
  animation: cards-container 1.5s forwards; /* Aplica uma animação chamada "cards-container" com duração de 1,5 segundos e mantém o estado final da animação */
}

.card {
  background-color: rgb(212, 211, 211);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 25vw;
  max-width: 400px;
  min-width: 250px;
  transition: transform 0.3s, border-color 0.3s, box-shadow 0.3s; /* Define transições suaves para transformações, cor da borda e sombra */
  cursor: pointer;
  border: 2px solid transparent;
}

.card:hover {
  transform: scale(1.05);
  border-color: var(--primary-color); /* Cor da borda ao passar o mouse */
}

/* Estiliza as imagens dos cards */
.card img {
  width: 100%;
  height: 140px;
  object-fit: cover;
}

/* Estiliza a área do conteúdo texto dos cards */
.card-content {
  padding: 15px;
  text-align: center;
}

/* Estiliza as tags h2 dos cards */
.card h2 {
  font-size: 1.5em;
  margin: 1px 0;
}

/* Estiliza as tags p dos cards */
.card p {
  font-size: 1em;
  color: #333;
}

#audio { 
  visibility: hidden; /* Esconde o elemento de áudio */
}

/* Estiliza o elemento footer (rodapé) da página */
footer {
  display: flex;
  flex-direction: column; /* Organiza os itens do footer em uma coluna */
  align-items: center; /* Alinha todos os itens filhos horizontalmente ao centro */
  background-color: var(--secondary-color);
  color: white;
  overflow: hidden; /* Oculta qualquer conteúdo que exceda as dimensões do footer */
  z-index: 3; /* Define a ordem de empilhamento do footer em relação a outros elementos */
  flex-shrink: 0; /* Impede que o footer encolha em tamanhos de tela menores */
  padding: 0px;
}

.copyright {
  margin-top: 0px;
  font-size: 0.9em;
  display: flex;
}
